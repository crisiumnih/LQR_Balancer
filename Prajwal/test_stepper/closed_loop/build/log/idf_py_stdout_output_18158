[1/24] Linking C static library esp-idf/json/libjson.a
[2/24] Linking C static library esp-idf/mqtt/libmqtt.a
[3/24] Linking C static library esp-idf/spiffs/libspiffs.a
[4/24] Linking C static library esp-idf/fatfs/libfatfs.a
[5/24] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/proto-c/wifi_constants.pb-c.c.obj
[6/24] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/closed_loop.c.obj
[7/24] Performing build step for 'bootloader'
[1/1] cd /home/crisiumnih/LQR_Balancer/Prajwal/test_stepper/closed_loop/build/bootloader/esp-idf/esptool_py && /home/crisiumnih/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/crisiumnih/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/crisiumnih/LQR_Balancer/Prajwal/test_stepper/closed_loop/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[8/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/src/scheme_console.c.obj
[9/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/proto-c/wifi_ctrl.pb-c.c.obj
[10/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/proto-c/wifi_config.pb-c.c.obj
[11/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/src/handlers.c.obj
[12/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/proto-c/wifi_scan.pb-c.c.obj
[13/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/src/wifi_scan.c.obj
[14/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/src/scheme_softap.c.obj
[15/22] Building C object esp-idf/wifi_provisioning/CMakeFiles/__idf_wifi_provisioning.dir/src/manager.c.obj
[16/22] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[17/22] Linking C static library esp-idf/main/libmain.a
[18/22] Generating ld/sections.ld
[19/22] Building C object CMakeFiles/closed_loop.elf.dir/project_elf_src_esp32.c.obj
[20/22] Linking CXX executable closed_loop.elf
[21/22] Generating binary image from built executable
esptool.py v4.8.dev4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/crisiumnih/LQR_Balancer/Prajwal/test_stepper/closed_loop/build/closed_loop.bin
[22/22] cd /home/crisiumnih/LQR_Balancer/Prajwal/test_stepper/closed_loop/build/esp-idf/esptool_py && /home/crisiumnih/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/crisiumnih/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/crisiumnih/LQR_Balancer/Prajwal/test_stepper/closed_loop/build/partition_table/partition-table.bin /home/crisiumnih/LQR_Balancer/Prajwal/test_stepper/closed_loop/build/closed_loop.bin
closed_loop.bin binary size 0x2da80 bytes. Smallest app partition is 0x100000 bytes. 0xd2580 bytes (82%) free.
